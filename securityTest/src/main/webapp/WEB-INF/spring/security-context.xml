<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd">
						
	<bean id = "customAccessDenied" class="com.tjoeun.security.CustomAccessDeniedHandler" />
	<bean id = "customLoginSuccessHandler" class="com.tjoeun.security.CustomLoginSuccessHandler" />
	<bean id = "bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- <bean id = "customPasswordEncoder" class= "com.tjoeun.security.CustomNoOpPasswordEncoder" /> -->
	<security:http auto-config="true" use-expressions="true">
		<!-- 특정한 uri 접근할때 interceptor 를 사용해서 접근 제한 설정한다 -->
		<security:intercept-url pattern="/test/all" access="permitAll"/>
		<security:intercept-url pattern="/test/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/test/admin" access="hasRole('ROLE_ADMIN')"/>
		
<!-- 
		<security:form-login /> 에서 지정한 url 패턴이 지정된 Controller 이동함
			이경우 반드시 GetMapping으로 하도록 약속함
-->
		<security:form-login login-page ="/cumtomLogin"
							authentication-success-handler-ref="customLoginSuccessHandler"/>
		<!-- 로그아웃  -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
							
		<!-- 권한없는 사람이 접속시(403) 에러페이지설정 -->
		<!-- <security:access-denied-handler error-page="/accessError"/> -->
		<security:access-denied-handler ref="customAccessDenied"/> 
	</security:http>
	<!-- 인코딩처리를안하는것이 {noop} -->
	<!-- authorities는 사용할수 있는 권한 -->
	<!-- admin으로 접속시 ROLE ADMIN과 MEMBER를 사용한다는것 -->
	<!-- 
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="member" password="{noop}1111" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}1111" authorities="ROLE_ADMIN,ROLE_MEMBER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	 -->
    <security:authentication-manager>    
        <security:authentication-provider>            
            <security:jdbc-user-service data-source-ref="dataSource" />
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider> 
    </security:authentication-manager>
</beans>


